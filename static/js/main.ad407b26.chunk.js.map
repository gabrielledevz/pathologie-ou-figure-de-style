{"version":3,"sources":["context/gameContext.js","repositories/questions.js","utils/shuffleArray.js","hooks/gameState.js","components/Answer/components/AnswerDetails.js","components/Answer/Answer.js","components/AnswerButton.js","assets/FacebookIcon.js","assets/TwitterIcon.js","components/ShareButtons.js","components/Quizz.js","components/PlayAgain.js","components/App.js","reportWebVitals.js","index.js"],"names":["GameContext","React","createContext","score","setScore","gameNumber","setGameNumber","Provider","Consumer","testMode","URLSearchParams","window","location","search","get","QUESTION_DATABASE","QUIZZ_DATA_TEST","array","shuffledArray","i","length","j","Math","floor","random","temp","shuffleArray","QUIZZ_DATA","NB_QUESTIONS_PER_GAME","MAX_GAME_NUMBER","trunc","console","log","AnswerDetails","question","word","genre","definition","example","author","source","className","Answer","isCorrect","displayNext","onClick","data-cy","QUESTION_TYPES","AnswerButton","typeClicked","buttonType","disabled","FacebookIcon","props","data-name","xmlns","viewBox","cx","cy","r","d","TwitterIcon","fill","ShareButtons","title","url","twitterHandle","tags","FacebookShareButton","quote","TwitterShareButton","Quizz","endTheGame","useContext","useState","questionId","setQuestionId","answerIsCorrect","setAnswerIsCorrect","slice","answerFunction","correctlyAnswered","type","moveOnNextQuestion","useGameState","answerDisplayed","setAnswerDisplayed","typeOfButtonClicked","setTypeOfButtonClicked","handleButton","CSSTransition","in","timeout","classNames","unmountOnExit","PlayAgain","startNewGame","isLastGame","ScoreComment","App","gameIsOn","setGameIsOn","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad407b26.chunk.js","sourcesContent":["import React from \"react\";\n\nconst GameContext = React.createContext({\n  score: 0,\n  setScore: () => {},\n  gameNumber: 1,\n  setGameNumber: () => {},\n});\n\nexport const GameProvider = GameContext.Provider;\nexport const GameConsumer = GameContext.Consumer;\n\nexport default GameContext;\n","import QUIZZ_DATA from \"./quizz-data\";\n//import QUIZZ_DATA_TEST from \"./quizz-data-test\";\nimport QUIZZ_DATA_TEST from \"./test-small\";\nimport { shuffleArray } from \"../utils/shuffleArray\";\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst testMode = urlParams.get(\"testMode\");\n\nexport const QUESTION_DATABASE = testMode\n  ? QUIZZ_DATA_TEST\n  : shuffleArray(QUIZZ_DATA);\n\nexport const NB_QUESTIONS_PER_GAME = testMode ? 5 : 15;\nexport const MAX_GAME_NUMBER = Math.trunc(\n  QUESTION_DATABASE.length / NB_QUESTIONS_PER_GAME\n);\n\nconsole.log(\"GAME_QUESTIONS\");\nconsole.log(QUESTION_DATABASE);\n","export const shuffleArray = (array) => {\n  var shuffledArray = [...array];\n  for (var i = shuffledArray.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = shuffledArray[i];\n    shuffledArray[i] = shuffledArray[j];\n    shuffledArray[j] = temp;\n  }\n  return shuffledArray;\n};\n","import { useContext, useState } from \"react\";\nimport GameContext from \"../context/gameContext\";\nimport {\n  QUESTION_DATABASE,\n  NB_QUESTIONS_PER_GAME,\n} from \"../repositories/questions\";\n\nexport const useGameState = () => {\n  const { score, setScore, gameNumber } = useContext(GameContext);\n  const [questionId, setQuestionId] = useState(0);\n  const [answerIsCorrect, setAnswerIsCorrect] = useState(null);\n\n  const GAME_QUESTIONS = QUESTION_DATABASE.slice(\n    gameNumber * NB_QUESTIONS_PER_GAME,\n    gameNumber * NB_QUESTIONS_PER_GAME + NB_QUESTIONS_PER_GAME\n  );\n\n  const answerFunction = (buttonType) => {\n    const correctlyAnswered = buttonType === question.type;\n    setAnswerIsCorrect(correctlyAnswered);\n    setScore(correctlyAnswered ? score + 1 : score);\n  };\n\n  const moveOnNextQuestion = () => {\n    if (questionId === NB_QUESTIONS_PER_GAME - 1) {\n      return false;\n    } else {\n      setQuestionId(questionId + 1);\n      return true;\n    }\n  };\n\n  const question = GAME_QUESTIONS[questionId];\n\n  return {\n    score,\n    answerFunction,\n    moveOnNextQuestion,\n    answerIsCorrect,\n    question,\n  };\n};\n","import WikipediaLink from \"./WikipediaLink\";\nimport \"./answerdetails.css\";\n\nconst WIKI_ENABLED = false;\nconst esp = \"\\u00a0\";\n\nconst AnswerDetails = ({\n  question: { word, genre, definition, example, author, source },\n}) => (\n  <div className=\"info-zone\">\n    <div className=\"definition\">\n      <em>\n        {word}, {genre} :\n      </em>{\" \"}\n      {definition}\n    </div>\n    {example && (\n      <p className=\"example\">\n        Exemple : «{esp}\n        {example}\n        {esp}» —{esp}\n        {author ? `${author}, ` : \"\"}\n        <em>{source}</em>\n      </p>\n    )}\n    {WIKI_ENABLED && <WikipediaLink request={word} />}\n  </div>\n);\n\nexport default AnswerDetails;\n","import AnswerDetails from \"./components/AnswerDetails\";\nimport \"./answer.css\";\n\nconst Answer = ({ question, isCorrect, displayNext }) => {\n  return (\n    <div className=\"answer-information\">\n      <div className=\"answer-result\">\n        {isCorrect ? \"C'est la bonne réponse !\" : \"C'est raté !\"}\n      </div>\n      <AnswerDetails question={question} />\n      <button\n        className=\"next-button\"\n        onClick={displayNext}\n        data-cy=\"next-button\"\n      >\n        Suivant\n      </button>\n    </div>\n  );\n};\n\nexport default Answer;\n","import \"./answerbutton.css\";\n\nconst QUESTION_TYPES = {\n  PATHOLOGIE: \"pathologie\",\n  FIGURE: \"figure\",\n  NONE: \"none\",\n};\n\nconst AnswerButton = ({ typeClicked, buttonType, onClick }) => (\n  <button\n    disabled={typeClicked !== QUESTION_TYPES.NONE}\n    className={`answer-button ${\n      typeClicked === buttonType ? \"button-selected\" : \"\"\n    }`}\n    onClick={onClick}\n    data-cy=\"answer-button\"\n  >\n    {buttonType === QUESTION_TYPES.FIGURE ? \"Figure de style\" : \"Pathologie\"}\n  </button>\n);\n\nexport default AnswerButton;\n","import * as React from \"react\";\n\nconst FacebookIcon = (props) => (\n  <svg\n    data-name=\"Calque 1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 512 512\"\n    {...props}\n  >\n    <title>{\"iconfinder_Facebook_38138prime9\"}</title>\n    <circle cx={256} cy={256} r={256} className=\"social-media-background\" />\n    <path\n      className=\"social-media-main\"\n      d=\"M272 184a7.56 7.56 0 018-8h32v-48h-56a39.61 39.61 0 00-40 40v48h-24v48h24v120h56V264h32l8-48h-40z\"\n    />\n  </svg>\n);\n\nexport default FacebookIcon;\n","import * as React from \"react\";\n\nconst TwitterIcon = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 1000\" {...props}>\n    <title />\n    <path\n      className=\"social-media-background\"\n      d=\"M500 0c276.1 0 500 223.9 500 500s-223.9 500-500 500S0 776.1 0 500 223.9 0 500 0z\"\n    />\n    <path\n      d=\"M384 754c235.8 0 364.9-195.4 364.9-364.9 0-5.5 0-11.1-.4-16.6 25.1-18.2 46.8-40.6 64-66.4-23.4 10.4-48.2 17.2-73.6 20.2 26.8-16 46.8-41.2 56.4-70.9-25.2 14.9-52.7 25.5-81.4 31.1-48.6-51.6-129.8-54.1-181.4-5.6-33.3 31.3-47.4 78-37.1 122.5-103.1-5.2-199.2-53.9-264.3-134-34 58.6-16.7 133.5 39.7 171.2-20.4-.6-40.4-6.1-58.2-16v1.6c0 61 43 113.6 102.9 125.7-18.9 5.1-38.7 5.9-57.9 2.2 16.8 52.2 64.9 88 119.8 89.1-45.4 35.7-101.5 55.1-159.2 55-10.2 0-20.4-.6-30.5-1.9C246.1 734 314.4 754 384 754\"\n      className=\"social-media-main\"\n    />\n    <path\n      d=\"M500 0c276.1 0 500 223.9 500 500s-223.9 500-500 500S0 776.1 0 500 223.9 0 500 0z\"\n      fill=\"none\"\n    />\n  </svg>\n);\n\nexport default TwitterIcon;\n","import { FacebookShareButton, TwitterShareButton } from \"react-share\";\nimport FacebookIcon from \"../assets/FacebookIcon\";\nimport TwitterIcon from \"../assets/TwitterIcon\";\nimport \"./sharebuttons.css\";\n\nconst ShareButtons = ({ title, url, twitterHandle, tags }) => {\n  return (\n    <div className=\"share-buttons\">\n      <FacebookShareButton\n        className=\"social-media-button\"\n        quote=\"Show me the Google!\"\n        url={\"https://gabrielledevz.github.io/pathologie-ou-figure-de-style/\"}\n      >\n        <FacebookIcon className=\"social-media-icon\" />\n      </FacebookShareButton>\n      <TwitterShareButton\n        className=\"social-media-button\"\n        quote=\"Show me the Google!\"\n        url={\"https://gabrielledevz.github.io/pathologie-ou-figure-de-style/\"}\n      >\n        <TwitterIcon className=\"social-media-icon\" />\n      </TwitterShareButton>\n    </div>\n  );\n};\nexport default ShareButtons;\n","import React, { useState } from \"react\";\nimport { useGameState } from \"../hooks/gameState\";\nimport Answer from \"./Answer/Answer\";\nimport AnswerButton from \"./AnswerButton\";\nimport ShareButtons from \"./ShareButtons\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./quizz.css\";\n\nconst QUESTION_TYPES = {\n  PATHOLOGIE: \"pathologie\",\n  FIGURE: \"figure\",\n  NONE: \"none\",\n};\n\nconst NO_QUESTION_LEFT = false;\n\nconst Quizz = ({ endTheGame }) => {\n  const {\n    score,\n    answerFunction,\n    moveOnNextQuestion,\n    answerIsCorrect,\n    question,\n  } = useGameState();\n\n  const [answerDisplayed, setAnswerDisplayed] = useState(false);\n\n  const [typeOfButtonClicked, setTypeOfButtonClicked] = useState(\n    QUESTION_TYPES.NONE\n  );\n\n  const handleButton = (type) => () => {\n    if (answerDisplayed === false) {\n      setTypeOfButtonClicked(type);\n      answerFunction(type);\n      setAnswerDisplayed(true);\n    }\n  };\n\n  const displayNext = () => {\n    setTypeOfButtonClicked(QUESTION_TYPES.NONE);\n    setAnswerDisplayed(false);\n\n    if (moveOnNextQuestion() === NO_QUESTION_LEFT) {\n      endTheGame();\n    }\n  };\n\n  return (\n    <div className=\"quizz\">\n      <div className=\"upper-part\">\n        <div className=\"share\">\n          <ShareButtons />\n        </div>\n        <div className=\"question\">\n          <CSSTransition\n            in={!answerDisplayed}\n            timeout={1000}\n            classNames=\"question\"\n          >\n            <div data-cy=\"question\">{question.word}</div>\n          </CSSTransition>\n        </div>\n\n        <div className=\"score\">\n          <p>Score</p>\n          <CSSTransition\n            in={answerIsCorrect && answerDisplayed}\n            timeout={500}\n            classNames=\"score\"\n          >\n            <div className=\"score-number\" data-cy=\"score\">\n              {score}\n            </div>\n          </CSSTransition>\n        </div>\n      </div>\n      <div className=\"lower-part\">\n        <div className=\"player-choice\">\n          <AnswerButton\n            onClick={handleButton(QUESTION_TYPES.PATHOLOGIE)}\n            buttonType={QUESTION_TYPES.PATHOLOGIE}\n            typeClicked={typeOfButtonClicked}\n          />\n          <AnswerButton\n            onClick={handleButton(QUESTION_TYPES.FIGURE)}\n            buttonType={QUESTION_TYPES.FIGURE}\n            typeClicked={typeOfButtonClicked}\n          />\n        </div>\n        <CSSTransition\n          in={answerDisplayed}\n          timeout={500}\n          classNames=\"answer\"\n          unmountOnExit\n        >\n          <Answer\n            question={question}\n            isCorrect={answerIsCorrect}\n            displayNext={displayNext}\n          />\n        </CSSTransition>\n      </div>\n    </div>\n  );\n};\n\nexport default Quizz;\n","import React, { useContext } from \"react\";\nimport GameContext from \"../context/gameContext\";\nimport \"./playagain.css\";\nimport {\n  NB_QUESTIONS_PER_GAME,\n  MAX_GAME_NUMBER,\n} from \"../repositories/questions\";\n\nconst PlayAgain = ({ startNewGame }) => {\n  const { score, setScore, gameNumber, setGameNumber } = useContext(\n    GameContext\n  );\n\n  const startAgain = () => {\n    setScore(0);\n    setGameNumber((gameNumber + 1) % MAX_GAME_NUMBER);\n    startNewGame();\n  };\n\n  const isLastGame = MAX_GAME_NUMBER === gameNumber + 1;\n\n  const ScoreComment = () => {\n    if (score > 13) {\n      return <p>Belle performance !</p>;\n    } else if (score > 10) {\n      return <p>Pas mal du tout !</p>;\n    } else {\n      return <p>Pas simple n'est-ce pas ?</p>;\n    }\n  };\n\n  return (\n    <div className=\"game-done\">\n      <div className=\"game-done-panel\">\n        <div className=\"score-comment\">\n          <ScoreComment />\n        </div>\n        <div className=\"final-score\">\n          <p>Votre score</p>\n          <div className=\"final-score-number\">\n            {\" \"}\n            {score}/{NB_QUESTIONS_PER_GAME}\n          </div>\n        </div>\n        {MAX_GAME_NUMBER === gameNumber + 1 && (\n          <p>Vous avez répondu à toutes les questions du jeu !</p>\n        )}\n        <button\n          className=\"restart-button hvr-underline-from-left\"\n          onClick={startAgain}\n          data-cy=\"play-again-button\"\n        >\n          {isLastGame ? \"Rejouer au jeu\" : \"Continuer à jouer\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayAgain;\n","import React, { useState } from \"react\";\nimport \"./app.css\";\nimport Quizz from \"./Quizz\";\nimport PlayAgain from \"./PlayAgain\";\nimport GameContext from \"../context/gameContext\";\n\nconst App = () => {\n  const [gameIsOn, setGameIsOn] = useState(true);\n  const [score, setScore] = useState(0);\n  const [gameNumber, setGameNumber] = useState(0);\n  const value = { score, setScore, gameNumber, setGameNumber };\n\n  return (\n    <GameContext.Provider value={value}>\n      <div className=\"window\">\n        <div className=\"title\">\n          <div>Pathologie ou figure de style ?</div>\n        </div>\n        <div className=\"game\">\n          {gameIsOn ? (\n            <Quizz endTheGame={() => setGameIsOn(false)} />\n          ) : (\n            <PlayAgain startNewGame={() => setGameIsOn(true)} />\n          )}\n        </div>\n      </div>\n    </GameContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}